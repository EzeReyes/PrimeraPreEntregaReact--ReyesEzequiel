"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/envioContext.js":
/*!*********************************!*\
  !*** ./context/envioContext.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnvioProvider: function() { return /* binding */ EnvioProvider; },\n/* harmony export */   useEnvio: function() { return /* binding */ useEnvio; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _api_useCorreoToken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/useCorreoToken */ \"./api/useCorreoToken.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst EnvioContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useEnvio = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(EnvioContext);\n};\n_s(useEnvio, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst EnvioProvider = (param)=>{\n    let { children, total } = param;\n    _s1();\n    const [provinciaSeleccionada, setProvinciaSeleccionada] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        codigo: \"\",\n        nombre: \"\"\n    });\n    const token = (0,_api_useCorreoToken__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (token) {\n            console.log(\"Token disponible para uso:\", token);\n        // Realiza otras acciones con el token\n        }\n    }, [\n        token\n    ]);\n    const [datosCliente, setDatosCliente] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        nombre: \"\",\n        apellido: \"\",\n        telefono: \"\",\n        calle: \"\",\n        numeracion: \"\",\n        piso: \"\",\n        departamento: \"\",\n        localidad: \"\",\n        codigopostal: \"\",\n        email: \"\",\n        aceptoTerminos: false\n    });\n    const actualizarDatosCliente = (nuevoCliente)=>{\n        setDatosCliente((prevState)=>({\n                ...prevState,\n                ...nuevoCliente\n            }));\n    };\n    const [deliveredType, setDeliveredType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [mensaje, setMensaje] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [sucursales, setSucursales] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [sucursalSeleccionada, setSucursalSeleccionada] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [servicios, setServicios] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [servicioSeleccionado, setServicioSeleccionado] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // const [codigoPostal, setCodigoPostal] = useState('');\n    const [cargando, setCargando] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [formularioVisible, setFormularioVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Nuevo estado\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setDeliveredType(\"\");\n        setSucursalSeleccionada(\"\");\n        setSucursales([]);\n        setServicios([]);\n    }, [\n        provinciaSeleccionada\n    ]);\n    const handleMetodoEnvioChange = async (e)=>{\n        const tipo = e.target.value;\n        setDeliveredType(tipo);\n        setSucursalSeleccionada(\"\");\n        setServicios([]);\n        setMensaje(\"\");\n        localStorage.setItem(\"metodoEnvio\", JSON.stringify(tipo));\n        if (tipo === \"S\") {\n            await fetchSucursales();\n        } else if (tipo === \"D\") {\n            await obtenerTarifas(tipo);\n        }\n    };\n    const fetchSucursales = async ()=>{\n        setCargando(true);\n        try {\n            const response = await fetch(\"https://api.correoargentino.com.ar/micorreo/v1/agencies?customerId=0001495301&provinceCode=\".concat(provinciaSeleccionada.codigo), {\n                method: \"GET\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Error al obtener sucursales\");\n            }\n            const data = await response.json();\n            setSucursales(data);\n            await obtenerTarifas(\"S\");\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMensaje(\"No se pudieron cargar las sucursales.\");\n        } finally{\n            setCargando(false);\n        }\n    };\n    const obtenerTarifas = async (tipo)=>{\n        setCargando(true);\n        try {\n            const response = await fetch(\"https://api.correoargentino.com.ar/micorreo/v1/rates\", {\n                method: \"POST\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    customerId: \"0001495301\",\n                    postalCodeOrigin: \"7600\",\n                    postalCodeDestination: datosCliente.codigopostal || \"1704\",\n                    deliveredType: tipo,\n                    dimensions: {\n                        weight: 2500,\n                        height: 10,\n                        width: 20,\n                        length: 30\n                    }\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Error al obtener tarifas\");\n            }\n            const data = await response.json();\n            setServicios(data.rates);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMensaje(\"No se pudieron cargar las tarifas.\");\n        } finally{\n            setCargando(false);\n        }\n    };\n    const procesarHorario = (horarios)=>{\n        const diasLaborales = [\n            \"monday\",\n            \"tuesday\",\n            \"wednesday\",\n            \"thursday\",\n            \"friday\"\n        ];\n        let rango = \"\";\n        const formatoHora = (hora)=>\"\".concat(hora.slice(0, 2), \":\").concat(hora.slice(2));\n        for (let dia of diasLaborales){\n            if (horarios[dia] && horarios[dia].start && horarios[dia].end) {\n                rango = \"De \".concat(formatoHora(horarios[dia].start), \" a \").concat(formatoHora(horarios[dia].end));\n                break;\n            }\n        }\n        return rango ? \"Lunes a Viernes \".concat(rango) : \"Sin horarios disponibles\";\n    };\n    const importar = async ()=>{\n        try {\n            const response = await fetch(\"https://api.correoargentino.com.ar/micorreo/v1/shipping/import\", {\n                method: \"POST\",\n                headers: {\n                    Authorization: \"Bearer \".concat(token),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    customerId: \"0001495301\",\n                    extOrderId: (0,uuid__WEBPACK_IMPORTED_MODULE_3__.v4)(),\n                    orderNumber: (0,uuid__WEBPACK_IMPORTED_MODULE_3__.v4)().slice(0, 8),\n                    sender: {\n                        name: \"Ezequiel\",\n                        phone: \"2236690513\",\n                        cellPhone: \"2236690513\",\n                        email: \"ese.reyes1992@gmail.com\",\n                        originAddress: {\n                            streetName: \"Giacobini\",\n                            streetNumber: \"2721\",\n                            floor: null,\n                            apartment: null,\n                            city: \"Mar del Plata\",\n                            provinceCode: \"B\",\n                            postalCode: \"7600\"\n                        }\n                    },\n                    recipient: {\n                        name: datosCliente.nombre || null,\n                        phone: datosCliente.telefono,\n                        cellPhone: datosCliente.telefono,\n                        email: datosCliente.email || null\n                    },\n                    shipping: {\n                        deliveryType: deliveredType,\n                        agency: deliveredType === \"S\" ? sucursalSeleccionada : undefined,\n                        address: {\n                            streetName: datosCliente.calle,\n                            streetNumber: datosCliente.numeracion,\n                            floor: datosCliente.piso,\n                            apartment: datosCliente.departamento,\n                            city: datosCliente.localidad,\n                            provinceCode: provinciaSeleccionada.codigo,\n                            postalCode: datosCliente.codigopostal\n                        },\n                        weight: 1000,\n                        declaredValue: total,\n                        height: 20,\n                        length: 40,\n                        width: 20\n                    }\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                console.error(\"Error:\", errorData);\n                setMensaje(\"Error: \".concat(errorData.message || \"No se pudo procesar la solicitud.\"));\n                return;\n            }\n            const data = await response.json();\n            setServicios(data.rates);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMensaje(\"No se pudieron cargar las tarifas.\");\n        } finally{\n            setCargando(false);\n        }\n    };\n    const validarDatosEnvio = ()=>{\n        if (!datosCliente.nombre || !datosCliente.email) {\n            setMensaje(\"Faltan datos del cliente.\");\n            return false;\n        }\n        if (deliveredType === \"S\" && !sucursalSeleccionada) {\n            setMensaje(\"Por favor, selecciona una sucursal.\");\n            return false;\n        }\n        return true;\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (!validarDatosEnvio()) {\n            return;\n        }\n        if (!deliveredType) {\n            setMensaje(\"Por favor, selecciona un m\\xe9todo de env\\xedo.\");\n            return;\n        }\n        if (deliveredType === \"S\" && !sucursalSeleccionada) {\n            setMensaje(\"Por favor, selecciona una sucursal.\");\n            return;\n        }\n        setMensaje(\"Envio importado con \\xe9xito\");\n        importar(); // Importa la orden\n        setFormularioVisible(false); // Solo cambia visibilidad, no afecta datos\n    };\n    const handleModificar = ()=>{\n        setFormularioVisible(true); // Reactiva el formulario\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(EnvioContext.Provider, {\n        value: {\n            handleMetodoEnvioChange,\n            handleModificar,\n            handleSubmit,\n            procesarHorario,\n            deliveredType,\n            mensaje,\n            sucursales,\n            cargando,\n            sucursalSeleccionada,\n            servicios,\n            servicioSeleccionado,\n            setSucursalSeleccionada,\n            setServicioSeleccionado,\n            formularioVisible,\n            actualizarDatosCliente,\n            datosCliente,\n            setDatosCliente,\n            provinciaSeleccionada,\n            setProvinciaSeleccionada\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Ezequiel\\\\Desktop\\\\entremediasCopia\\\\context\\\\envioContext.js\",\n        lineNumber: 274,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(EnvioProvider, \"X18wi10fexugIEWeCl89Bf+oM7o=\", false, function() {\n    return [\n        _api_useCorreoToken__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    ];\n});\n_c = EnvioProvider;\nvar _c;\n$RefreshReg$(_c, \"EnvioProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/envioContext.js\n"));

/***/ })

});